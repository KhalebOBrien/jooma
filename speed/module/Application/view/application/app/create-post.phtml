<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */

$this->headTitle('Create Post');
$this->backOfficeMenu()->setActiveItemId('editor');

?>

<div class="row">
    <div class="col-md-12">
        <div class="card card-custom gutter-b">
            <div class="card-body pt-5 pb-0 mt-n3">
                <div class="form-group">
                    <label class="col-form-label">Category/Group</label>
                    <select class="form-control selectpicker" data-size="4">
                        <?php
                            if (!empty($groups)) :
                                foreach ($groups as $cat) :
                        ?>
                            <option value="<?= $cat->getId() ?>"><?= $cat->getName() ?></option>
                        <?php
                                endforeach;
                            endif;
                        ?>
                    </select>
                </div>
                <div class="form-group">
                    <label class="">Title</label>
                    <input type="text" name="txtTitle" id="txtTitle" class="form-control">
                </div>
                <div class="form-group">
                    <label class="">Slug </label>
                    <input type="text" name="txtSlug" id="txtSlug" class="form-control">
                    <div class="mt-3 text-muted">This will be auto generated if left empty.</div>
                </div>
                <div class="form-group">
                    <label class="">Tag(s)</label>
                    <input id="txtTags" class="form-control tagify" placeholder='type...' />
                </div>
                <div class="form-group">
                    <textarea id="txtPostBody" name="txtPostBody" class="tox-target"></textarea>
                </div>
                <div class="tinymce"></div>
            </div>
        </div>
    </div>
</div>

<?php
    $this->headScript()
        ->offsetSetFile(41, $this->basePath('assets/plugins/tinymce/tinymce.min.js'));

    $this->inlineScript()->captureStart();
?>
    var loadTags = function() {
        var input = document.getElementById('txtTags');
        var tagify = new Tagify(input, {
            enforceWhitelist: true,
            whitelist: [
                <?php
                    if (!empty($tags)) {
                        $ts = '';
                        foreach ($tags as $tag) {
                            $ts .= '"'.$tag->getName().'", ';
                        }
                        echo $ts;
                    }
                ?>
            ],
            callbacks: {
                //add: console.log, // callback when adding a tag
                //remove: console.log // callback when removing a tag
            }
        });
    }
    
    // tinymce config
    tinymce.init({
        selector: '#txtPostBody',
	    browser_spellcheck: true,
        plugins: [
            "advlist lists link image print preview hr anchor pagebreak",
            "searchreplace wordcount visualblocks code fullscreen help",
            "autosave media emoticons imagetool table autolink charmap",
        ],
        toolbar: "formatselect | fontsizeselect | undo redo | cut copy paste | bold italic underline strikethrough | numlist bullist | alignleft aligncenter alignright alignjustify outdent indent | blockquote subscript superscript | emoticons image imagetool media | preview",
        branding: false,
    }); 

    $(document).ready(function() {
        loadTags();
    });
<?php
    $this->inlineScript()->captureEnd();
?>